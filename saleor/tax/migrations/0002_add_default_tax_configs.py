# Generated by Django 3.2.13 on 2022-05-19 13:47

from django.db import migrations


def add_default_tax_class(apps, schema_editor):
    TaxClass = apps.get_model("tax", "TaxClass")
    ProductType = apps.get_model("product", "ProductType")
    ShippingMethod = apps.get_model("shipping", "ShippingMethod")

    # Create the default tax class
    tax_class = TaxClass.objects.create(name="Default", is_default=True)

    # Assign it to all product types and shipping methods
    ProductType.objects.update(tax_class_id=tax_class.pk)
    ShippingMethod.objects.update(tax_class_id=tax_class.pk)


def add_tax_configuration_for_channels(apps, schema_editor):
    Channel = apps.get_model("channel", "Channel")
    TaxConfiguration = apps.get_model("tax", "TaxConfiguration")
    SiteSettings = apps.get_model("site", "SiteSettings")

    site_settings = SiteSettings.objects.first()

    tax_configurations = []
    for channel in Channel.objects.all():
        tax_configurations.append(
            TaxConfiguration(
                channel=channel,
                charge_taxes=True,
                display_gross_prices=site_settings.display_gross_prices,
                prices_entered_with_tax=site_settings.include_taxes_in_prices,
            )
        )
    TaxConfiguration.objects.bulk_create(tax_configurations)


class Migration(migrations.Migration):

    dependencies = [
        ("tax", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_default_tax_class, migrations.RunPython.noop),
        migrations.RunPython(
            add_tax_configuration_for_channels, migrations.RunPython.noop
        ),
    ]
